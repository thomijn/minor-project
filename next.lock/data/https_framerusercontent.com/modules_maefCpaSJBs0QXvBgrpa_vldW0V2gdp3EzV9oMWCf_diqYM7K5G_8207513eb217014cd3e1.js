import Label from "https://framerusercontent.com/modules/0BAl1JxuNEvtjCqbmyRe/dN0R0HtqfRu30bgxNucB/ffkc2Cfzl.js"; import Note from "https://framerusercontent.com/modules/kjJVUMWib6Iv97l1imtC/g8EiOAkba3d15hwr6ymC/Hp7tF5l7M.js"; import * as React from "react"; import { motion , addPropertyControls , cx , useVariantState , useAddVariantProps , useActiveVariantCallback , withCSS , LayoutGroup , ControlType , transformTemplate , Stack } from "framer"; const variantClassNames = {nMzP4fhom: "framer-v-19ofwpx"}; const humanReadableVariantMap = {}; const transitions = {default: {type: "spring", ease: [0.44, 0, 0.56, 1], duration: 0.3, delay: 0, stiffness: 500, damping: 60, mass: 1}}; const Component = React.forwardRef(function ({ style, className, layoutId, width, height, variant: outerVariant = "nMzP4fhom", label: HoRqrRwmj = "Label", required: SyvBtNb1h = true, showNote: CzJO5JFDN = true, note: fSabrnjSV = "A note for extra info", ...restProps }, ref) { const outerVariantId = humanReadableVariantMap[outerVariant]; const variant = outerVariantId || outerVariant; const { variants, baseVariant, gestureVariant, classNames, transition, setVariant, setGestureState } = useVariantState({defaultVariant: "nMzP4fhom", variant, transitions, variantClassNames}); const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant); const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, {}); return React.createElement(LayoutGroup, {id: layoutId}, React.createElement(motion.div, {initial: variant, animate: variants, className: cx("framer-Cp4pu", classNames), style: {display: "contents"}, onHoverStart: () => { return setGestureState({isHovered: true}); }, onHoverEnd: () => { return setGestureState({isHovered: false}); }, onTapStart: () => { return setGestureState({isPressed: true}); }, onTap: () => { return setGestureState({isPressed: false}); }, onTapCancel: () => { return setGestureState({isPressed: false}); }}, React.createElement(Stack, Object.assign({}, restProps, {layoutId: "nMzP4fhom", style: {rotate: 0, ...style}, className: cx("framer-19ofwpx", className), background: null, direction: "horizontal", distribution: "space-between", alignment: "center", gap: 5, __fromCanvasComponent: true, __contentWrapperStyle: {width: "100%", height: "100%", padding: "0px 0px 0px 0px"}, center: false, "data-highlight": false, transition, ref}, addVariantProps("nMzP4fhom")), React.createElement(motion.div, Object.assign({layoutId: "uFF0HjAYx-container", style: {rotate: 0}, className: "framer-1nsb5pc-container", transformTemplate: transformTemplate(false), transition}, addVariantProps("uFF0HjAYx-container")), React.createElement(Label, Object.assign({width: "100%", height: "100%", layoutId: "uFF0HjAYx", id: "uFF0HjAYx", label: HoRqrRwmj, required: SyvBtNb1h, style: {width: "100%", height: "100%"}, transition}, addVariantProps("uFF0HjAYx")))), React.createElement(motion.div, Object.assign({layoutId: "CVA5oPitf-container", style: {rotate: 0}, className: "framer-1rydozp-container", transformTemplate: transformTemplate(false), transition}, addVariantProps("CVA5oPitf-container")), React.createElement(Note, Object.assign({width: "100%", height: "100%", layoutId: "CVA5oPitf", id: "CVA5oPitf", showNote: CzJO5JFDN, note: fSabrnjSV, style: {width: "100%", height: "100%"}, transition}, addVariantProps("CVA5oPitf"))))))); }); const css = `.framer-Cp4pu [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none;}\n.framer-Cp4pu .framer-19ofwpx {position: relative; overflow: visible; width: 268px; height: 15px;}\n.framer-Cp4pu .framer-1nsb5pc-container {position: relative; width: 1px; height: 15px; flex: 1 0 0px;}\n.framer-Cp4pu .framer-1rydozp-container {position: relative; width: 103px; height: 13px; flex: none;}`; const FramerdiqYM7K5G = withCSS(Component, css); export default FramerdiqYM7K5G; FramerdiqYM7K5G.displayName = "Label & Note"; FramerdiqYM7K5G.defaultProps = {width: 268, height: 15}; addPropertyControls(FramerdiqYM7K5G, {HoRqrRwmj: {type: ControlType.String, title: "Label", defaultValue: "Label"}, SyvBtNb1h: {type: ControlType.Boolean, title: "Required", defaultValue: true}, CzJO5JFDN: {type: ControlType.Boolean, title: "Show Note", defaultValue: true}, fSabrnjSV: {type: ControlType.String, title: "Note", defaultValue: "A note for extra info"}}); export const __FramerMetadata__ = {exports: {default: {type: "reactComponent", slots: [], annotations: {framerIntrinsicHeight: "15", framerVariables: "{\"HoRqrRwmj\":\"label\",\"SyvBtNb1h\":\"required\",\"CzJO5JFDN\":\"showNote\",\"fSabrnjSV\":\"note\"}", framerSupportedLayoutWidth: "any", framerCanvasComponentVariantDetails: "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"fixed\",\"fixed\"]}}}", framerIntrinsicWidth: "268", framerSupportedLayoutHeight: "any"}}}}; 